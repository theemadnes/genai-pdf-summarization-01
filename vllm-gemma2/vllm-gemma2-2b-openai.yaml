apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-openai
  namespace: vllm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vllm-openai
  template:
    metadata:
      labels:
        app: vllm-openai
      #annotations:
      #  gke-gcsfuse/volumes: "true"
    spec:
      #serviceAccountName: KSA
      containers:
      - name: inference-server
        image: vllm/vllm-openai:latest
        resources:
          requests:
            cpu: "2"
            memory: "12Gi"
            ephemeral-storage: "25Gi"
            nvidia.com/gpu: 1
          limits:
            cpu: "2"
            memory: "12Gi"
            ephemeral-storage: "25Gi"
            nvidia.com/gpu: 1
        args:
        - --model=$(MODEL_ID)
        - --tensor-parallel-size=1
        env:
        - name: MODEL_ID
          value: google/gemma-2-2b-it
        - name: VLLM_ATTENTION_BACKEND
          value: FLASHINFER
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-secret
              key: hf_api_token
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        #- name: gcs-fuse-csi-ephemeral
        #  mountPath: /model-data
        #  readOnly: true
      volumes:
      - name: dshm
        emptyDir:
            medium: Memory
      #- name: gcs-fuse-csi-ephemeral
      #  csi:
      #    driver: gcsfuse.csi.storage.gke.io
      #    volumeAttributes:
      #      bucketName: V_BUCKET
      #      mountOptions: "implicit-dirs"
      #      fileCacheCapacity: "20Gi"
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-l4
      tolerations:
      - key: "nvidia.com/gpu"
        #operator: "Exists"
        value: "present"
        effect: "NoSchedule"
      #- key: "on-demand"
      #  value: "true"
      #  operator: "Equal"
      #  effect: "NoSchedule"          
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-openai
  namespace: vllm
spec:
  selector:
    app: vllm-openai
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000